//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SINU.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SINUEntities : DbContext
    {
        public SINUEntities()
            : base("name=SINUEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Antropometria> Antropometria { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Baja> Baja { get; set; }
        public virtual DbSet<Configuracion> Configuracion { get; set; }
        public virtual DbSet<DocPresentado> DocPresentado { get; set; }
        public virtual DbSet<Domicilio> Domicilio { get; set; }
        public virtual DbSet<EstablecimientoRindeExamen> EstablecimientoRindeExamen { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<EstadoOcupacional> EstadoOcupacional { get; set; }
        public virtual DbSet<Estudio> Estudio { get; set; }
        public virtual DbSet<Etapa> Etapa { get; set; }
        public virtual DbSet<Familiares> Familiares { get; set; }
        public virtual DbSet<Fuerza> Fuerza { get; set; }
        public virtual DbSet<Inscripcion> Inscripcion { get; set; }
        public virtual DbSet<Institucion> Institucion { get; set; }
        public virtual DbSet<Institutos> Institutos { get; set; }
        public virtual DbSet<NiveldEstudio> NiveldEstudio { get; set; }
        public virtual DbSet<NivelIdioma> NivelIdioma { get; set; }
        public virtual DbSet<OficinasYDelegaciones> OficinasYDelegaciones { get; set; }
        public virtual DbSet<PeriodosInscripciones> PeriodosInscripciones { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<PersonaIdioma> PersonaIdioma { get; set; }
        public virtual DbSet<Postulante> Postulante { get; set; }
        public virtual DbSet<PostulanteViaje> PostulanteViaje { get; set; }
        public virtual DbSet<Preferencia> Preferencia { get; set; }
        public virtual DbSet<Secuencia_EtapaEstado> Secuencia_EtapaEstado { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
        public virtual DbSet<SituacionOcupacional> SituacionOcupacional { get; set; }
        public virtual DbSet<SituacionRevista> SituacionRevista { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoDocPresentado> TipoDocPresentado { get; set; }
        public virtual DbSet<TipoNacionalidad> TipoNacionalidad { get; set; }
        public virtual DbSet<ConfiguracionAdmin> ConfiguracionAdmin { get; set; }
        public virtual DbSet<InscripcionEtapaEstado> InscripcionEtapaEstado { get; set; }
        public virtual DbSet<vConfiguracionAdmin> vConfiguracionAdmin { get; set; }
        public virtual DbSet<vEntrevistaLugarFecha> vEntrevistaLugarFecha { get; set; }
        public virtual DbSet<vEstCivil> vEstCivil { get; set; }
        public virtual DbSet<vLOCALIDAD> vLOCALIDAD { get; set; }
        public virtual DbSet<vPeriodosInscrip> vPeriodosInscrip { get; set; }
        public virtual DbSet<vPersona_ActividadMilitar> vPersona_ActividadMilitar { get; set; }
        public virtual DbSet<vPersona_Antropometria> vPersona_Antropometria { get; set; }
        public virtual DbSet<vPersona_DatosPer> vPersona_DatosPer { get; set; }
        public virtual DbSet<vPersona_Domicilio> vPersona_Domicilio { get; set; }
        public virtual DbSet<VPersona_Estudio> VPersona_Estudio { get; set; }
        public virtual DbSet<vPersona_Idioma> vPersona_Idioma { get; set; }
        public virtual DbSet<vProvincia_Depto_Localidad> vProvincia_Depto_Localidad { get; set; }
        public virtual DbSet<vRELIGION> vRELIGION { get; set; }
        public virtual DbSet<vSecuencia_EtapaEstado> vSecuencia_EtapaEstado { get; set; }
        public virtual DbSet<vSeguridad_Grupos> vSeguridad_Grupos { get; set; }
        public virtual DbSet<vSeguridad_Grupos_Usuarios> vSeguridad_Grupos_Usuarios { get; set; }
        public virtual DbSet<vSeguridad_Usuarios> vSeguridad_Usuarios { get; set; }
        public virtual DbSet<ActividadMilitar> ActividadMilitar { get; set; }
        public virtual DbSet<Interes> Interes { get; set; }
        public virtual DbSet<vPersona_SituacionOcupacional> vPersona_SituacionOcupacional { get; set; }
        public virtual DbSet<Usuario_OficyDeleg> Usuario_OficyDeleg { get; set; }
        public virtual DbSet<vUsuariosAdministrativos> vUsuariosAdministrativos { get; set; }
        public virtual DbSet<VerificacionPantallas> VerificacionPantallas { get; set; }
        public virtual DbSet<vParam_Grados> vParam_Grados { get; set; }
        public virtual DbSet<vPostulanteEtapaEstado> vPostulanteEtapaEstado { get; set; }
        public virtual DbSet<vPersona_Familiar> vPersona_Familiar { get; set; }
        public virtual DbSet<CarreraOficio> CarreraOficio { get; set; }
        public virtual DbSet<ComoSeEntero> ComoSeEntero { get; set; }
        public virtual DbSet<Modalidad> Modalidad { get; set; }
        public virtual DbSet<vPersona_DatosBasicos> vPersona_DatosBasicos { get; set; }
        public virtual DbSet<vConvocatoriaDetalles> vConvocatoriaDetalles { get; set; }
        public virtual DbSet<VPersonaProblema> VPersonaProblema { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<Convocatoria> Convocatoria { get; set; }
        public virtual DbSet<DataProblemaEncontrado> DataProblemaEncontrado { get; set; }
        public virtual DbSet<DataVerificacion> DataVerificacion { get; set; }
        public virtual DbSet<GrupoCarrOficio> GrupoCarrOficio { get; set; }
        public virtual DbSet<ResGrupo> ResGrupo { get; set; }
        public virtual DbSet<vRestriccionesPorConvYFechaPeriodosInscrip> vRestriccionesPorConvYFechaPeriodosInscrip { get; set; }
        public virtual DbSet<vInstitucionesConvocadasYCarrerasAsociadas> vInstitucionesConvocadasYCarrerasAsociadas { get; set; }
        public virtual DbSet<ConsultaProgramada> ConsultaProgramada { get; set; }
        public virtual DbSet<vConsultaInscripciones> vConsultaInscripciones { get; set; }
        public virtual DbSet<vDataProblemaEncontrado> vDataProblemaEncontrado { get; set; }
        public virtual DbSet<VerificacionPantallasCerradas> VerificacionPantallasCerradas { get; set; }
        public virtual DbSet<vVerificacionPantallasYDatosAVerificar> vVerificacionPantallasYDatosAVerificar { get; set; }
        public virtual DbSet<TipoPersonal> TipoPersonal { get; set; }
        public virtual DbSet<vRestriccionesGrupo> vRestriccionesGrupo { get; set; }
        public virtual DbSet<vRestriccionesGrupoLista> vRestriccionesGrupoLista { get; set; }
        public virtual DbSet<vGruposYCarreras> vGruposYCarreras { get; set; }
        public virtual DbSet<vModalidadYDocumento> vModalidadYDocumento { get; set; }
        public virtual DbSet<Delegacion_EstablecExamen> Delegacion_EstablecExamen { get; set; }
        public virtual DbSet<vDelegacion_EstablecExamen> vDelegacion_EstablecExamen { get; set; }
        public virtual DbSet<vInstitucionModalidad> vInstitucionModalidad { get; set; }
        public virtual DbSet<vSecuencia_EtapaEstadoNoRechazados> vSecuencia_EtapaEstadoNoRechazados { get; set; }
        public virtual DbSet<vSecuencia_EtapaEstadoRECHAZADOS> vSecuencia_EtapaEstadoRECHAZADOS { get; set; }
        public virtual DbSet<vInscriptosYConvocatorias> vInscriptosYConvocatorias { get; set; }
        public virtual DbSet<vOficDeleg_EstablecimientoRindExamen> vOficDeleg_EstablecimientoRindExamen { get; set; }
        public virtual DbSet<DeclaracionJurada> DeclaracionJurada { get; set; }
        public virtual DbSet<vInscriptosconTitulosProblemas> vInscriptosconTitulosProblemas { get; set; }
        public virtual DbSet<vInscriptosCantYTODASConvocatorias> vInscriptosCantYTODASConvocatorias { get; set; }
        public virtual DbSet<vInscriptosConTitulosProblemasCount> vInscriptosConTitulosProblemasCount { get; set; }
        public virtual DbSet<vInscriptosYRestriccionesCount> vInscriptosYRestriccionesCount { get; set; }
        public virtual DbSet<vInscriptosYRestriccionesCheck> vInscriptosYRestriccionesCheck { get; set; }
        public virtual DbSet<vParentesco> vParentesco { get; set; }
        public virtual DbSet<vPostPersonaEtapaEstadoUltimoEstado> vPostPersonaEtapaEstadoUltimoEstado { get; set; }
        public virtual DbSet<vEntrevistaLugarFechaUltInscripc> vEntrevistaLugarFechaUltInscripc { get; set; }
        public virtual DbSet<vPersona_DatosPer_UltInscripc> vPersona_DatosPer_UltInscripc { get; set; }
        public virtual DbSet<vInscripcionDetalleUltInsc> vInscripcionDetalleUltInsc { get; set; }
        public virtual DbSet<vInscripcionDetalle> vInscripcionDetalle { get; set; }
        public virtual DbSet<vInscripcionEtapaEstadoUltimoEstado> vInscripcionEtapaEstadoUltimoEstado { get; set; }
        public virtual DbSet<vExportacionDatosBasicos> vExportacionDatosBasicos { get; set; }
        public virtual DbSet<vExportacion_Escuelas> vExportacion_Escuelas { get; set; }
    
        public virtual int A_LogicaDelSistema(string logicaDeseada)
        {
            var logicaDeseadaParameter = logicaDeseada != null ?
                new ObjectParameter("LogicaDeseada", logicaDeseada) :
                new ObjectParameter("LogicaDeseada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A_LogicaDelSistema", logicaDeseadaParameter);
        }
    
        public virtual ObjectResult<Aprender01_Result> Aprender01()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Aprender01_Result>("Aprender01");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_vIdiomas_Result> sp_vIdiomas(string cODIGO)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vIdiomas_Result>("sp_vIdiomas", cODIGOParameter);
        }
    
        public virtual ObjectResult<sp_vPaises_Result> sp_vPaises(string cODIGO)
        {
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vPaises_Result>("sp_vPaises", cODIGOParameter);
        }
    
        public virtual int spActividadMilitarEliminar(Nullable<int> idActividadMilitar)
        {
            var idActividadMilitarParameter = idActividadMilitar.HasValue ?
                new ObjectParameter("IdActividadMilitar", idActividadMilitar) :
                new ObjectParameter("IdActividadMilitar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActividadMilitarEliminar", idActividadMilitarParameter);
        }
    
        public virtual int spActividadMilitarIU(Nullable<int> idActividadMilitar, Nullable<int> idPersona, Nullable<bool> ingreso, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaBaja, string causaMotivoNoingreso, string motivoBaja, string jerarquia, string cargo, string destino, Nullable<int> idSituacionRevista, Nullable<int> idFuerza, Nullable<int> idBaja)
        {
            var idActividadMilitarParameter = idActividadMilitar.HasValue ?
                new ObjectParameter("IdActividadMilitar", idActividadMilitar) :
                new ObjectParameter("IdActividadMilitar", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var ingresoParameter = ingreso.HasValue ?
                new ObjectParameter("Ingreso", ingreso) :
                new ObjectParameter("Ingreso", typeof(bool));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            var causaMotivoNoingresoParameter = causaMotivoNoingreso != null ?
                new ObjectParameter("CausaMotivoNoingreso", causaMotivoNoingreso) :
                new ObjectParameter("CausaMotivoNoingreso", typeof(string));
    
            var motivoBajaParameter = motivoBaja != null ?
                new ObjectParameter("MotivoBaja", motivoBaja) :
                new ObjectParameter("MotivoBaja", typeof(string));
    
            var jerarquiaParameter = jerarquia != null ?
                new ObjectParameter("Jerarquia", jerarquia) :
                new ObjectParameter("Jerarquia", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var idSituacionRevistaParameter = idSituacionRevista.HasValue ?
                new ObjectParameter("IdSituacionRevista", idSituacionRevista) :
                new ObjectParameter("IdSituacionRevista", typeof(int));
    
            var idFuerzaParameter = idFuerza.HasValue ?
                new ObjectParameter("IdFuerza", idFuerza) :
                new ObjectParameter("IdFuerza", typeof(int));
    
            var idBajaParameter = idBaja.HasValue ?
                new ObjectParameter("IdBaja", idBaja) :
                new ObjectParameter("IdBaja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActividadMilitarIU", idActividadMilitarParameter, idPersonaParameter, ingresoParameter, fechaIngresoParameter, fechaBajaParameter, causaMotivoNoingresoParameter, motivoBajaParameter, jerarquiaParameter, cargoParameter, destinoParameter, idSituacionRevistaParameter, idFuerzaParameter, idBajaParameter);
        }
    
        public virtual int spAntropometriaIU(Nullable<int> idPostulantePersona, Nullable<int> altura, Nullable<decimal> peso, Nullable<decimal> iMC, Nullable<int> perimCabeza, Nullable<int> perimTorax, Nullable<int> perimCintura, Nullable<int> perimCaderas, Nullable<int> largoPantalon, Nullable<int> largoEntrep, Nullable<int> largoFalda, Nullable<int> cuello, Nullable<int> calzado)
        {
            var idPostulantePersonaParameter = idPostulantePersona.HasValue ?
                new ObjectParameter("IdPostulantePersona", idPostulantePersona) :
                new ObjectParameter("IdPostulantePersona", typeof(int));
    
            var alturaParameter = altura.HasValue ?
                new ObjectParameter("Altura", altura) :
                new ObjectParameter("Altura", typeof(int));
    
            var pesoParameter = peso.HasValue ?
                new ObjectParameter("Peso", peso) :
                new ObjectParameter("Peso", typeof(decimal));
    
            var iMCParameter = iMC.HasValue ?
                new ObjectParameter("IMC", iMC) :
                new ObjectParameter("IMC", typeof(decimal));
    
            var perimCabezaParameter = perimCabeza.HasValue ?
                new ObjectParameter("PerimCabeza", perimCabeza) :
                new ObjectParameter("PerimCabeza", typeof(int));
    
            var perimToraxParameter = perimTorax.HasValue ?
                new ObjectParameter("PerimTorax", perimTorax) :
                new ObjectParameter("PerimTorax", typeof(int));
    
            var perimCinturaParameter = perimCintura.HasValue ?
                new ObjectParameter("PerimCintura", perimCintura) :
                new ObjectParameter("PerimCintura", typeof(int));
    
            var perimCaderasParameter = perimCaderas.HasValue ?
                new ObjectParameter("PerimCaderas", perimCaderas) :
                new ObjectParameter("PerimCaderas", typeof(int));
    
            var largoPantalonParameter = largoPantalon.HasValue ?
                new ObjectParameter("LargoPantalon", largoPantalon) :
                new ObjectParameter("LargoPantalon", typeof(int));
    
            var largoEntrepParameter = largoEntrep.HasValue ?
                new ObjectParameter("LargoEntrep", largoEntrep) :
                new ObjectParameter("LargoEntrep", typeof(int));
    
            var largoFaldaParameter = largoFalda.HasValue ?
                new ObjectParameter("LargoFalda", largoFalda) :
                new ObjectParameter("LargoFalda", typeof(int));
    
            var cuelloParameter = cuello.HasValue ?
                new ObjectParameter("Cuello", cuello) :
                new ObjectParameter("Cuello", typeof(int));
    
            var calzadoParameter = calzado.HasValue ?
                new ObjectParameter("Calzado", calzado) :
                new ObjectParameter("Calzado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAntropometriaIU", idPostulantePersonaParameter, alturaParameter, pesoParameter, iMCParameter, perimCabezaParameter, perimToraxParameter, perimCinturaParameter, perimCaderasParameter, largoPantalonParameter, largoEntrepParameter, largoFaldaParameter, cuelloParameter, calzadoParameter);
        }
    
        public virtual int spCreaPostulante(Nullable<bool> reinscripcion, Nullable<int> idPersonaExistente, string apellido, string nombre, string dNI, string email, Nullable<int> idPreferenciaInstituto, Nullable<int> idDelegacionOficinaIngresoInscribio)
        {
            var reinscripcionParameter = reinscripcion.HasValue ?
                new ObjectParameter("reinscripcion", reinscripcion) :
                new ObjectParameter("reinscripcion", typeof(bool));
    
            var idPersonaExistenteParameter = idPersonaExistente.HasValue ?
                new ObjectParameter("IdPersonaExistente", idPersonaExistente) :
                new ObjectParameter("IdPersonaExistente", typeof(int));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var idPreferenciaInstitutoParameter = idPreferenciaInstituto.HasValue ?
                new ObjectParameter("IdPreferenciaInstituto", idPreferenciaInstituto) :
                new ObjectParameter("IdPreferenciaInstituto", typeof(int));
    
            var idDelegacionOficinaIngresoInscribioParameter = idDelegacionOficinaIngresoInscribio.HasValue ?
                new ObjectParameter("IdDelegacionOficinaIngresoInscribio", idDelegacionOficinaIngresoInscribio) :
                new ObjectParameter("IdDelegacionOficinaIngresoInscribio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCreaPostulante", reinscripcionParameter, idPersonaExistenteParameter, apellidoParameter, nombreParameter, dNIParameter, emailParameter, idPreferenciaInstitutoParameter, idDelegacionOficinaIngresoInscribioParameter);
        }
    
        public virtual int spDatosBasicosUpdate(string apellido, string nombres, Nullable<int> idSexo, string dNI, string telefono, string celular, Nullable<System.DateTime> fechaNacimiento, string email, Nullable<int> idDelegacionOficinaIngresoInscribio, string comoSeEntero, Nullable<int> idComoSeEntero, Nullable<int> idPreferencia, Nullable<int> idPersona, Nullable<int> idPostulante)
        {
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var idSexoParameter = idSexo.HasValue ?
                new ObjectParameter("IdSexo", idSexo) :
                new ObjectParameter("IdSexo", typeof(int));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var idDelegacionOficinaIngresoInscribioParameter = idDelegacionOficinaIngresoInscribio.HasValue ?
                new ObjectParameter("IdDelegacionOficinaIngresoInscribio", idDelegacionOficinaIngresoInscribio) :
                new ObjectParameter("IdDelegacionOficinaIngresoInscribio", typeof(int));
    
            var comoSeEnteroParameter = comoSeEntero != null ?
                new ObjectParameter("ComoSeEntero", comoSeEntero) :
                new ObjectParameter("ComoSeEntero", typeof(string));
    
            var idComoSeEnteroParameter = idComoSeEntero.HasValue ?
                new ObjectParameter("IdComoSeEntero", idComoSeEntero) :
                new ObjectParameter("IdComoSeEntero", typeof(int));
    
            var idPreferenciaParameter = idPreferencia.HasValue ?
                new ObjectParameter("IdPreferencia", idPreferencia) :
                new ObjectParameter("IdPreferencia", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idPostulanteParameter = idPostulante.HasValue ?
                new ObjectParameter("IdPostulante", idPostulante) :
                new ObjectParameter("IdPostulante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDatosBasicosUpdate", apellidoParameter, nombresParameter, idSexoParameter, dNIParameter, telefonoParameter, celularParameter, fechaNacimientoParameter, emailParameter, idDelegacionOficinaIngresoInscribioParameter, comoSeEnteroParameter, idComoSeEnteroParameter, idPreferenciaParameter, idPersonaParameter, idPostulanteParameter);
        }
    
        public virtual int spDatosPersonalesUpdate(Nullable<int> idPersona, Nullable<int> idInscripcion, string cUIL, Nullable<System.DateTime> fechaNacimiento, string idEstadoCivil, string idReligion, Nullable<int> idTipoNacionalidad, string idModalidad, Nullable<int> idCarreraOficio, Nullable<int> idpreferencia, string nombres, string apellido, ObjectParameter msg)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var cUILParameter = cUIL != null ?
                new ObjectParameter("CUIL", cUIL) :
                new ObjectParameter("CUIL", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idEstadoCivilParameter = idEstadoCivil != null ?
                new ObjectParameter("IdEstadoCivil", idEstadoCivil) :
                new ObjectParameter("IdEstadoCivil", typeof(string));
    
            var idReligionParameter = idReligion != null ?
                new ObjectParameter("IdReligion", idReligion) :
                new ObjectParameter("IdReligion", typeof(string));
    
            var idTipoNacionalidadParameter = idTipoNacionalidad.HasValue ?
                new ObjectParameter("idTipoNacionalidad", idTipoNacionalidad) :
                new ObjectParameter("idTipoNacionalidad", typeof(int));
    
            var idModalidadParameter = idModalidad != null ?
                new ObjectParameter("IdModalidad", idModalidad) :
                new ObjectParameter("IdModalidad", typeof(string));
    
            var idCarreraOficioParameter = idCarreraOficio.HasValue ?
                new ObjectParameter("IdCarreraOficio", idCarreraOficio) :
                new ObjectParameter("IdCarreraOficio", typeof(int));
    
            var idpreferenciaParameter = idpreferencia.HasValue ?
                new ObjectParameter("idpreferencia", idpreferencia) :
                new ObjectParameter("idpreferencia", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDatosPersonalesUpdate", idPersonaParameter, idInscripcionParameter, cUILParameter, fechaNacimientoParameter, idEstadoCivilParameter, idReligionParameter, idTipoNacionalidadParameter, idModalidadParameter, idCarreraOficioParameter, idpreferenciaParameter, nombresParameter, apellidoParameter, msg);
        }
    
        public virtual int spDomiciliosU(Nullable<int> idDomicilioDNI, string calle, string numero, string piso, string unidad, Nullable<int> idLocalidad, string prov_Loc_CP, string idPais, Nullable<int> idDomicilioActual, string eventualCalle, string eventualNumero, string eventualPiso, string eventualUnidad, Nullable<int> eventualIdLocalidad, string eventualProv_Loc_CP, string eventualIdPais)
        {
            var idDomicilioDNIParameter = idDomicilioDNI.HasValue ?
                new ObjectParameter("IdDomicilioDNI", idDomicilioDNI) :
                new ObjectParameter("IdDomicilioDNI", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(string));
    
            var idLocalidadParameter = idLocalidad.HasValue ?
                new ObjectParameter("IdLocalidad", idLocalidad) :
                new ObjectParameter("IdLocalidad", typeof(int));
    
            var prov_Loc_CPParameter = prov_Loc_CP != null ?
                new ObjectParameter("Prov_Loc_CP", prov_Loc_CP) :
                new ObjectParameter("Prov_Loc_CP", typeof(string));
    
            var idPaisParameter = idPais != null ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(string));
    
            var idDomicilioActualParameter = idDomicilioActual.HasValue ?
                new ObjectParameter("IdDomicilioActual", idDomicilioActual) :
                new ObjectParameter("IdDomicilioActual", typeof(int));
    
            var eventualCalleParameter = eventualCalle != null ?
                new ObjectParameter("EventualCalle", eventualCalle) :
                new ObjectParameter("EventualCalle", typeof(string));
    
            var eventualNumeroParameter = eventualNumero != null ?
                new ObjectParameter("EventualNumero", eventualNumero) :
                new ObjectParameter("EventualNumero", typeof(string));
    
            var eventualPisoParameter = eventualPiso != null ?
                new ObjectParameter("EventualPiso", eventualPiso) :
                new ObjectParameter("EventualPiso", typeof(string));
    
            var eventualUnidadParameter = eventualUnidad != null ?
                new ObjectParameter("EventualUnidad", eventualUnidad) :
                new ObjectParameter("EventualUnidad", typeof(string));
    
            var eventualIdLocalidadParameter = eventualIdLocalidad.HasValue ?
                new ObjectParameter("EventualIdLocalidad", eventualIdLocalidad) :
                new ObjectParameter("EventualIdLocalidad", typeof(int));
    
            var eventualProv_Loc_CPParameter = eventualProv_Loc_CP != null ?
                new ObjectParameter("EventualProv_Loc_CP", eventualProv_Loc_CP) :
                new ObjectParameter("EventualProv_Loc_CP", typeof(string));
    
            var eventualIdPaisParameter = eventualIdPais != null ?
                new ObjectParameter("EventualIdPais", eventualIdPais) :
                new ObjectParameter("EventualIdPais", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDomiciliosU", idDomicilioDNIParameter, calleParameter, numeroParameter, pisoParameter, unidadParameter, idLocalidadParameter, prov_Loc_CPParameter, idPaisParameter, idDomicilioActualParameter, eventualCalleParameter, eventualNumeroParameter, eventualPisoParameter, eventualUnidadParameter, eventualIdLocalidadParameter, eventualProv_Loc_CPParameter, eventualIdPaisParameter);
        }
    
        public virtual int spEstudiosEliminar(Nullable<int> idEstudio)
        {
            var idEstudioParameter = idEstudio.HasValue ?
                new ObjectParameter("IdEstudio", idEstudio) :
                new ObjectParameter("IdEstudio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEstudiosEliminar", idEstudioParameter);
        }
    
        public virtual int spEstudiosIU(Nullable<int> idEstudio, Nullable<int> idPersona, string titulo, Nullable<bool> completo, Nullable<int> idNiveldEstudio, Nullable<int> idInstitutos, Nullable<double> promedio, Nullable<int> cantidadMateriaAdeudadas, Nullable<int> ultimoAnioCursado, string nombreYPaisInstituto, Nullable<bool> cursandoUltimoAnio)
        {
            var idEstudioParameter = idEstudio.HasValue ?
                new ObjectParameter("IdEstudio", idEstudio) :
                new ObjectParameter("IdEstudio", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var completoParameter = completo.HasValue ?
                new ObjectParameter("Completo", completo) :
                new ObjectParameter("Completo", typeof(bool));
    
            var idNiveldEstudioParameter = idNiveldEstudio.HasValue ?
                new ObjectParameter("IdNiveldEstudio", idNiveldEstudio) :
                new ObjectParameter("IdNiveldEstudio", typeof(int));
    
            var idInstitutosParameter = idInstitutos.HasValue ?
                new ObjectParameter("IdInstitutos", idInstitutos) :
                new ObjectParameter("IdInstitutos", typeof(int));
    
            var promedioParameter = promedio.HasValue ?
                new ObjectParameter("Promedio", promedio) :
                new ObjectParameter("Promedio", typeof(double));
    
            var cantidadMateriaAdeudadasParameter = cantidadMateriaAdeudadas.HasValue ?
                new ObjectParameter("CantidadMateriaAdeudadas", cantidadMateriaAdeudadas) :
                new ObjectParameter("CantidadMateriaAdeudadas", typeof(int));
    
            var ultimoAnioCursadoParameter = ultimoAnioCursado.HasValue ?
                new ObjectParameter("ultimoAnioCursado", ultimoAnioCursado) :
                new ObjectParameter("ultimoAnioCursado", typeof(int));
    
            var nombreYPaisInstitutoParameter = nombreYPaisInstituto != null ?
                new ObjectParameter("NombreYPaisInstituto", nombreYPaisInstituto) :
                new ObjectParameter("NombreYPaisInstituto", typeof(string));
    
            var cursandoUltimoAnioParameter = cursandoUltimoAnio.HasValue ?
                new ObjectParameter("CursandoUltimoAnio", cursandoUltimoAnio) :
                new ObjectParameter("CursandoUltimoAnio", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEstudiosIU", idEstudioParameter, idPersonaParameter, tituloParameter, completoParameter, idNiveldEstudioParameter, idInstitutosParameter, promedioParameter, cantidadMateriaAdeudadasParameter, ultimoAnioCursadoParameter, nombreYPaisInstitutoParameter, cursandoUltimoAnioParameter);
        }
    
        public virtual int spIdiomasIU(Nullable<int> idPersonaIdioma, Nullable<int> idPersona, string codIdioma, Nullable<int> habla, Nullable<int> lee, Nullable<int> escribe)
        {
            var idPersonaIdiomaParameter = idPersonaIdioma.HasValue ?
                new ObjectParameter("IdPersonaIdioma", idPersonaIdioma) :
                new ObjectParameter("IdPersonaIdioma", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var codIdiomaParameter = codIdioma != null ?
                new ObjectParameter("CodIdioma", codIdioma) :
                new ObjectParameter("CodIdioma", typeof(string));
    
            var hablaParameter = habla.HasValue ?
                new ObjectParameter("Habla", habla) :
                new ObjectParameter("Habla", typeof(int));
    
            var leeParameter = lee.HasValue ?
                new ObjectParameter("Lee", lee) :
                new ObjectParameter("Lee", typeof(int));
    
            var escribeParameter = escribe.HasValue ?
                new ObjectParameter("Escribe", escribe) :
                new ObjectParameter("Escribe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIdiomasIU", idPersonaIdiomaParameter, idPersonaParameter, codIdiomaParameter, hablaParameter, leeParameter, escribeParameter);
        }
    
        public virtual int spIngresaASeguridad(string uSUARIO, string grupo, string mr, string grado, string destino, string nombre, string apellido)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            var mrParameter = mr != null ?
                new ObjectParameter("mr", mr) :
                new ObjectParameter("mr", typeof(string));
    
            var gradoParameter = grado != null ?
                new ObjectParameter("Grado", grado) :
                new ObjectParameter("Grado", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngresaASeguridad", uSUARIOParameter, grupoParameter, mrParameter, gradoParameter, destinoParameter, nombreParameter, apellidoParameter);
        }
    
        public virtual int spSituacionOcupacionalIU(Nullable<int> idSituacionOcupacional, Nullable<int> idPersona, Nullable<int> idEstadoOcupacional, string ocupacionActual, string oficio, Nullable<int> aniosTrabajados, string domicilioLaboral)
        {
            var idSituacionOcupacionalParameter = idSituacionOcupacional.HasValue ?
                new ObjectParameter("IdSituacionOcupacional", idSituacionOcupacional) :
                new ObjectParameter("IdSituacionOcupacional", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idEstadoOcupacionalParameter = idEstadoOcupacional.HasValue ?
                new ObjectParameter("IdEstadoOcupacional", idEstadoOcupacional) :
                new ObjectParameter("IdEstadoOcupacional", typeof(int));
    
            var ocupacionActualParameter = ocupacionActual != null ?
                new ObjectParameter("OcupacionActual", ocupacionActual) :
                new ObjectParameter("OcupacionActual", typeof(string));
    
            var oficioParameter = oficio != null ?
                new ObjectParameter("Oficio", oficio) :
                new ObjectParameter("Oficio", typeof(string));
    
            var aniosTrabajadosParameter = aniosTrabajados.HasValue ?
                new ObjectParameter("AniosTrabajados", aniosTrabajados) :
                new ObjectParameter("AniosTrabajados", typeof(int));
    
            var domicilioLaboralParameter = domicilioLaboral != null ?
                new ObjectParameter("DomicilioLaboral", domicilioLaboral) :
                new ObjectParameter("DomicilioLaboral", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSituacionOcupacionalIU", idSituacionOcupacionalParameter, idPersonaParameter, idEstadoOcupacionalParameter, ocupacionActualParameter, oficioParameter, aniosTrabajadosParameter, domicilioLaboralParameter);
        }
    
        public virtual int spTransaction()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spTransaction");
        }
    
        public virtual ObjectResult<spValidarUsuario_Result> spValidarUsuario(string uSUARIO, string funcion)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var funcionParameter = funcion != null ?
                new ObjectParameter("Funcion", funcion) :
                new ObjectParameter("Funcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidarUsuario_Result>("spValidarUsuario", uSUARIOParameter, funcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Vaciar(string valoremail, Nullable<int> eliminandotabla)
        {
            var valoremailParameter = valoremail != null ?
                new ObjectParameter("valoremail", valoremail) :
                new ObjectParameter("valoremail", typeof(string));
    
            var eliminandotablaParameter = eliminandotabla.HasValue ?
                new ObjectParameter("eliminandotabla", eliminandotabla) :
                new ObjectParameter("eliminandotabla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Vaciar", valoremailParameter, eliminandotablaParameter);
        }
    
        public virtual int VaciarASPNETUser(string correoregistrado, Nullable<int> eliminar)
        {
            var correoregistradoParameter = correoregistrado != null ?
                new ObjectParameter("correoregistrado", correoregistrado) :
                new ObjectParameter("correoregistrado", typeof(string));
    
            var eliminarParameter = eliminar.HasValue ?
                new ObjectParameter("eliminar", eliminar) :
                new ObjectParameter("eliminar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VaciarASPNETUser", correoregistradoParameter, eliminarParameter);
        }
    
        public virtual int spCambiaSecuencia(Nullable<int> id_Persona, Nullable<int> num_Secuencia)
        {
            var id_PersonaParameter = id_Persona.HasValue ?
                new ObjectParameter("id_Persona", id_Persona) :
                new ObjectParameter("id_Persona", typeof(int));
    
            var num_SecuenciaParameter = num_Secuencia.HasValue ?
                new ObjectParameter("Num_Secuencia", num_Secuencia) :
                new ObjectParameter("Num_Secuencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCambiaSecuencia", id_PersonaParameter, num_SecuenciaParameter);
        }
    
        public virtual int spRelacionFamiliarIU(Nullable<int> idFamiliar, Nullable<int> idPostulante, Nullable<int> idPersona, Nullable<int> idParentesco, Nullable<bool> vive, Nullable<bool> conVive)
        {
            var idFamiliarParameter = idFamiliar.HasValue ?
                new ObjectParameter("IdFamiliar", idFamiliar) :
                new ObjectParameter("IdFamiliar", typeof(int));
    
            var idPostulanteParameter = idPostulante.HasValue ?
                new ObjectParameter("IdPostulante", idPostulante) :
                new ObjectParameter("IdPostulante", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idParentescoParameter = idParentesco.HasValue ?
                new ObjectParameter("idParentesco", idParentesco) :
                new ObjectParameter("idParentesco", typeof(int));
    
            var viveParameter = vive.HasValue ?
                new ObjectParameter("Vive", vive) :
                new ObjectParameter("Vive", typeof(bool));
    
            var conViveParameter = conVive.HasValue ?
                new ObjectParameter("ConVive", conVive) :
                new ObjectParameter("ConVive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRelacionFamiliarIU", idFamiliarParameter, idPostulanteParameter, idPersonaParameter, idParentescoParameter, viveParameter, conViveParameter);
        }
    
        public virtual int spPERSONAFamiliarIU(Nullable<int> idpersona, Nullable<int> idPostulante, string email, string apellido, string nombres, Nullable<int> idSexo, Nullable<System.DateTime> fechaNacimiento, string dNI, string cUIL, string idReligion, string idEstadoCivil, Nullable<System.DateTime> fechaCasamiento, string telefono, string celular, string mailPersona, Nullable<int> idTipoNacionalidad, Nullable<int> idLugarNacimientoLocalidad, Nullable<int> idParentesco, Nullable<bool> vive, Nullable<bool> conVive)
        {
            var idpersonaParameter = idpersona.HasValue ?
                new ObjectParameter("idpersona", idpersona) :
                new ObjectParameter("idpersona", typeof(int));
    
            var idPostulanteParameter = idPostulante.HasValue ?
                new ObjectParameter("IdPostulante", idPostulante) :
                new ObjectParameter("IdPostulante", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var idSexoParameter = idSexo.HasValue ?
                new ObjectParameter("IdSexo", idSexo) :
                new ObjectParameter("IdSexo", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var cUILParameter = cUIL != null ?
                new ObjectParameter("CUIL", cUIL) :
                new ObjectParameter("CUIL", typeof(string));
    
            var idReligionParameter = idReligion != null ?
                new ObjectParameter("IdReligion", idReligion) :
                new ObjectParameter("IdReligion", typeof(string));
    
            var idEstadoCivilParameter = idEstadoCivil != null ?
                new ObjectParameter("IdEstadoCivil", idEstadoCivil) :
                new ObjectParameter("IdEstadoCivil", typeof(string));
    
            var fechaCasamientoParameter = fechaCasamiento.HasValue ?
                new ObjectParameter("FechaCasamiento", fechaCasamiento) :
                new ObjectParameter("FechaCasamiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var mailPersonaParameter = mailPersona != null ?
                new ObjectParameter("MailPersona", mailPersona) :
                new ObjectParameter("MailPersona", typeof(string));
    
            var idTipoNacionalidadParameter = idTipoNacionalidad.HasValue ?
                new ObjectParameter("idTipoNacionalidad", idTipoNacionalidad) :
                new ObjectParameter("idTipoNacionalidad", typeof(int));
    
            var idLugarNacimientoLocalidadParameter = idLugarNacimientoLocalidad.HasValue ?
                new ObjectParameter("IdLugarNacimientoLocalidad", idLugarNacimientoLocalidad) :
                new ObjectParameter("IdLugarNacimientoLocalidad", typeof(int));
    
            var idParentescoParameter = idParentesco.HasValue ?
                new ObjectParameter("idParentesco", idParentesco) :
                new ObjectParameter("idParentesco", typeof(int));
    
            var viveParameter = vive.HasValue ?
                new ObjectParameter("Vive", vive) :
                new ObjectParameter("Vive", typeof(bool));
    
            var conViveParameter = conVive.HasValue ?
                new ObjectParameter("ConVive", conVive) :
                new ObjectParameter("ConVive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPERSONAFamiliarIU", idpersonaParameter, idPostulanteParameter, emailParameter, apellidoParameter, nombresParameter, idSexoParameter, fechaNacimientoParameter, dNIParameter, cUILParameter, idReligionParameter, idEstadoCivilParameter, fechaCasamientoParameter, telefonoParameter, celularParameter, mailPersonaParameter, idTipoNacionalidadParameter, idLugarNacimientoLocalidadParameter, idParentescoParameter, viveParameter, conViveParameter);
        }
    
        public virtual int spFamiliarEliminar(Nullable<int> idFamiliar, Nullable<int> idPersona)
        {
            var idFamiliarParameter = idFamiliar.HasValue ?
                new ObjectParameter("IdFamiliar", idFamiliar) :
                new ObjectParameter("IdFamiliar", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFamiliarEliminar", idFamiliarParameter, idPersonaParameter);
        }
    
        public virtual int spProximaSecuenciaEtapaEstado(Nullable<int> idPostulante, Nullable<int> idInscripcion, Nullable<bool> retroceder, Nullable<int> secuenciaSiguiente, string etapaProx, string estadoProx)
        {
            var idPostulanteParameter = idPostulante.HasValue ?
                new ObjectParameter("IdPostulante", idPostulante) :
                new ObjectParameter("IdPostulante", typeof(int));
    
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var retrocederParameter = retroceder.HasValue ?
                new ObjectParameter("Retroceder", retroceder) :
                new ObjectParameter("Retroceder", typeof(bool));
    
            var secuenciaSiguienteParameter = secuenciaSiguiente.HasValue ?
                new ObjectParameter("SecuenciaSiguiente", secuenciaSiguiente) :
                new ObjectParameter("SecuenciaSiguiente", typeof(int));
    
            var etapaProxParameter = etapaProx != null ?
                new ObjectParameter("EtapaProx", etapaProx) :
                new ObjectParameter("EtapaProx", typeof(string));
    
            var estadoProxParameter = estadoProx != null ?
                new ObjectParameter("EstadoProx", estadoProx) :
                new ObjectParameter("EstadoProx", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProximaSecuenciaEtapaEstado", idPostulanteParameter, idInscripcionParameter, retrocederParameter, secuenciaSiguienteParameter, etapaProxParameter, estadoProxParameter);
        }
    
        public virtual int spUsuariosAdministrativosELIMINAR(string email, string codGrupo, Nullable<int> idOficinasYDelegaciones)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("codGrupo", codGrupo) :
                new ObjectParameter("codGrupo", typeof(string));
    
            var idOficinasYDelegacionesParameter = idOficinasYDelegaciones.HasValue ?
                new ObjectParameter("IdOficinasYDelegaciones", idOficinasYDelegaciones) :
                new ObjectParameter("IdOficinasYDelegaciones", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsuariosAdministrativosELIMINAR", emailParameter, codGrupoParameter, idOficinasYDelegacionesParameter);
        }
    
        public virtual int spUsuariosAdministrativosU(string email, string destino, string mr, string grado, string nombre, string apellido, string codGrupo, Nullable<int> idOficinasYDelegaciones, string comentario)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var mrParameter = mr != null ?
                new ObjectParameter("mr", mr) :
                new ObjectParameter("mr", typeof(string));
    
            var gradoParameter = grado != null ?
                new ObjectParameter("Grado", grado) :
                new ObjectParameter("Grado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("codGrupo", codGrupo) :
                new ObjectParameter("codGrupo", typeof(string));
    
            var idOficinasYDelegacionesParameter = idOficinasYDelegaciones.HasValue ?
                new ObjectParameter("IdOficinasYDelegaciones", idOficinasYDelegaciones) :
                new ObjectParameter("IdOficinasYDelegaciones", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUsuariosAdministrativosU", emailParameter, destinoParameter, mrParameter, gradoParameter, nombreParameter, apellidoParameter, codGrupoParameter, idOficinasYDelegacionesParameter, comentarioParameter);
        }
    
        public virtual int spAdministradorEditar(string email, string destino, string mr, string grado, string nombre, string apellido, string codGrupo, Nullable<int> idOficinasYDelegaciones, string comentario)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            var mrParameter = mr != null ?
                new ObjectParameter("mr", mr) :
                new ObjectParameter("mr", typeof(string));
    
            var gradoParameter = grado != null ?
                new ObjectParameter("Grado", grado) :
                new ObjectParameter("Grado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var codGrupoParameter = codGrupo != null ?
                new ObjectParameter("codGrupo", codGrupo) :
                new ObjectParameter("codGrupo", typeof(string));
    
            var idOficinasYDelegacionesParameter = idOficinasYDelegaciones.HasValue ?
                new ObjectParameter("IdOficinasYDelegaciones", idOficinasYDelegaciones) :
                new ObjectParameter("IdOficinasYDelegaciones", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdministradorEditar", emailParameter, destinoParameter, mrParameter, gradoParameter, nombreParameter, apellidoParameter, codGrupoParameter, idOficinasYDelegacionesParameter, comentarioParameter);
        }
    
        public virtual int sp_JobLimpiAspnetUserDiasAntig(Nullable<int> topeAntiguedadEnDias)
        {
            var topeAntiguedadEnDiasParameter = topeAntiguedadEnDias.HasValue ?
                new ObjectParameter("TopeAntiguedadEnDias", topeAntiguedadEnDias) :
                new ObjectParameter("TopeAntiguedadEnDias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_JobLimpiAspnetUserDiasAntig", topeAntiguedadEnDiasParameter);
        }
    
        public virtual int spRelacionFamiliarEliminar(Nullable<int> idFamiliar)
        {
            var idFamiliarParameter = idFamiliar.HasValue ?
                new ObjectParameter("IdFamiliar", idFamiliar) :
                new ObjectParameter("IdFamiliar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRelacionFamiliarEliminar", idFamiliarParameter);
        }
    
        public virtual ObjectResult<spModalidadParaEsteInscripto_Result1> spModalidadParaEsteInscripto(Nullable<int> idInscripcion)
        {
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spModalidadParaEsteInscripto_Result1>("spModalidadParaEsteInscripto", idInscripcionParameter);
        }
    
        public virtual ObjectResult<spCarrerasDelGrupo_Result> spCarrerasDelGrupo(string idGrupoCarrOficio, string personal)
        {
            var idGrupoCarrOficioParameter = idGrupoCarrOficio != null ?
                new ObjectParameter("IdGrupoCarrOficio", idGrupoCarrOficio) :
                new ObjectParameter("IdGrupoCarrOficio", typeof(string));
    
            var personalParameter = personal != null ?
                new ObjectParameter("Personal", personal) :
                new ObjectParameter("Personal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCarrerasDelGrupo_Result>("spCarrerasDelGrupo", idGrupoCarrOficioParameter, personalParameter);
        }
    
        public virtual ObjectResult<CarreraOficio> CarrerasDelGrupo(string idGrupoCarrOficio, string personal)
        {
            var idGrupoCarrOficioParameter = idGrupoCarrOficio != null ?
                new ObjectParameter("IdGrupoCarrOficio", idGrupoCarrOficio) :
                new ObjectParameter("IdGrupoCarrOficio", typeof(string));
    
            var personalParameter = personal != null ?
                new ObjectParameter("Personal", personal) :
                new ObjectParameter("Personal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarreraOficio>("CarrerasDelGrupo", idGrupoCarrOficioParameter, personalParameter);
        }
    
        public virtual ObjectResult<CarreraOficio> CarrerasDelGrupo(string idGrupoCarrOficio, string personal, MergeOption mergeOption)
        {
            var idGrupoCarrOficioParameter = idGrupoCarrOficio != null ?
                new ObjectParameter("IdGrupoCarrOficio", idGrupoCarrOficio) :
                new ObjectParameter("IdGrupoCarrOficio", typeof(string));
    
            var personalParameter = personal != null ?
                new ObjectParameter("Personal", personal) :
                new ObjectParameter("Personal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CarreraOficio>("CarrerasDelGrupo", mergeOption, idGrupoCarrOficioParameter, personalParameter);
        }
    
        public virtual int spGrupoYAgrupacionCarreras(string nuevoIdGrupoCarrOficio, string personal, string descripcion, string idCarreraOficio, Nullable<int> idResGrupo, Nullable<bool> esInsert, string originalIdGrupoCarrOficio, ObjectParameter mensaje)
        {
            var nuevoIdGrupoCarrOficioParameter = nuevoIdGrupoCarrOficio != null ?
                new ObjectParameter("NuevoIdGrupoCarrOficio", nuevoIdGrupoCarrOficio) :
                new ObjectParameter("NuevoIdGrupoCarrOficio", typeof(string));
    
            var personalParameter = personal != null ?
                new ObjectParameter("Personal", personal) :
                new ObjectParameter("Personal", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idCarreraOficioParameter = idCarreraOficio != null ?
                new ObjectParameter("IdCarreraOficio", idCarreraOficio) :
                new ObjectParameter("IdCarreraOficio", typeof(string));
    
            var idResGrupoParameter = idResGrupo.HasValue ?
                new ObjectParameter("IdResGrupo", idResGrupo) :
                new ObjectParameter("IdResGrupo", typeof(int));
    
            var esInsertParameter = esInsert.HasValue ?
                new ObjectParameter("EsInsert", esInsert) :
                new ObjectParameter("EsInsert", typeof(bool));
    
            var originalIdGrupoCarrOficioParameter = originalIdGrupoCarrOficio != null ?
                new ObjectParameter("OriginalIdGrupoCarrOficio", originalIdGrupoCarrOficio) :
                new ObjectParameter("OriginalIdGrupoCarrOficio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGrupoYAgrupacionCarreras", nuevoIdGrupoCarrOficioParameter, personalParameter, descripcionParameter, idCarreraOficioParameter, idResGrupoParameter, esInsertParameter, originalIdGrupoCarrOficioParameter, mensaje);
        }
    
        public virtual int spPGrupoYAgrupacionCrreras(string nuevoIdGrupoCarrOficio, string personal, string descripcion, string idCarreraOficio, Nullable<int> idResGrupo, Nullable<bool> esInsert, string originalIdGrupoCarrOficio, ObjectParameter mensaje)
        {
            var nuevoIdGrupoCarrOficioParameter = nuevoIdGrupoCarrOficio != null ?
                new ObjectParameter("NuevoIdGrupoCarrOficio", nuevoIdGrupoCarrOficio) :
                new ObjectParameter("NuevoIdGrupoCarrOficio", typeof(string));
    
            var personalParameter = personal != null ?
                new ObjectParameter("Personal", personal) :
                new ObjectParameter("Personal", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idCarreraOficioParameter = idCarreraOficio != null ?
                new ObjectParameter("IdCarreraOficio", idCarreraOficio) :
                new ObjectParameter("IdCarreraOficio", typeof(string));
    
            var idResGrupoParameter = idResGrupo.HasValue ?
                new ObjectParameter("IdResGrupo", idResGrupo) :
                new ObjectParameter("IdResGrupo", typeof(int));
    
            var esInsertParameter = esInsert.HasValue ?
                new ObjectParameter("EsInsert", esInsert) :
                new ObjectParameter("EsInsert", typeof(bool));
    
            var originalIdGrupoCarrOficioParameter = originalIdGrupoCarrOficio != null ?
                new ObjectParameter("OriginalIdGrupoCarrOficio", originalIdGrupoCarrOficio) :
                new ObjectParameter("OriginalIdGrupoCarrOficio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPGrupoYAgrupacionCrreras", nuevoIdGrupoCarrOficioParameter, personalParameter, descripcionParameter, idCarreraOficioParameter, idResGrupoParameter, esInsertParameter, originalIdGrupoCarrOficioParameter, mensaje);
        }
    
        public virtual ObjectResult<spCarrerasParaEsteInscripto_Result2> spCarrerasParaEsteInscripto(Nullable<int> idInscripcion, string idModalidad)
        {
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var idModalidadParameter = idModalidad != null ?
                new ObjectParameter("IdModalidad", idModalidad) :
                new ObjectParameter("IdModalidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCarrerasParaEsteInscripto_Result2>("spCarrerasParaEsteInscripto", idInscripcionParameter, idModalidadParameter);
        }
    
        public virtual ObjectResult<sp_vGruposYCarreras_Result> sp_vGruposYCarreras(string idGrupoCarrOficio)
        {
            var idGrupoCarrOficioParameter = idGrupoCarrOficio != null ?
                new ObjectParameter("IdGrupoCarrOficio", idGrupoCarrOficio) :
                new ObjectParameter("IdGrupoCarrOficio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vGruposYCarreras_Result>("sp_vGruposYCarreras", idGrupoCarrOficioParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaInscriptosModalidadGenero_Result> sp_ConsultaInscriptosModalidadGenero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaInscriptosModalidadGenero_Result>("sp_ConsultaInscriptosModalidadGenero");
        }
    
        [DbFunction("SINUEntities", "PantallasYComentariosDelPostulante")]
        public virtual IQueryable<PantallasYComentariosDelPostulante_Result> PantallasYComentariosDelPostulante(Nullable<int> idpostulantePersona)
        {
            var idpostulantePersonaParameter = idpostulantePersona.HasValue ?
                new ObjectParameter("IdpostulantePersona", idpostulantePersona) :
                new ObjectParameter("IdpostulantePersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PantallasYComentariosDelPostulante_Result>("[SINUEntities].[PantallasYComentariosDelPostulante](@IdpostulantePersona)", idpostulantePersonaParameter);
        }
    
        public virtual ObjectResult<spTildarPantallaParaPostulate_Result1> spTildarPantallaParaPostulate(Nullable<int> idpostulantePersona)
        {
            var idpostulantePersonaParameter = idpostulantePersona.HasValue ?
                new ObjectParameter("IdpostulantePersona", idpostulantePersona) :
                new ObjectParameter("IdpostulantePersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTildarPantallaParaPostulate_Result1>("spTildarPantallaParaPostulate", idpostulantePersonaParameter);
        }
    
        public virtual int spCierraPantallaDePostulante(Nullable<int> idPantalla, Nullable<int> idpostulantePersona, Nullable<bool> seCierra)
        {
            var idPantallaParameter = idPantalla.HasValue ?
                new ObjectParameter("IdPantalla", idPantalla) :
                new ObjectParameter("IdPantalla", typeof(int));
    
            var idpostulantePersonaParameter = idpostulantePersona.HasValue ?
                new ObjectParameter("IdpostulantePersona", idpostulantePersona) :
                new ObjectParameter("IdpostulantePersona", typeof(int));
    
            var seCierraParameter = seCierra.HasValue ?
                new ObjectParameter("SeCierra", seCierra) :
                new ObjectParameter("SeCierra", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCierraPantallaDePostulante", idPantallaParameter, idpostulantePersonaParameter, seCierraParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> spTieneProblemasEnPantallaEstePostulate(Nullable<int> idpostulantePersona, Nullable<int> idPantalla)
        {
            var idpostulantePersonaParameter = idpostulantePersona.HasValue ?
                new ObjectParameter("IdpostulantePersona", idpostulantePersona) :
                new ObjectParameter("IdpostulantePersona", typeof(int));
    
            var idPantallaParameter = idPantalla.HasValue ?
                new ObjectParameter("IdPantalla", idPantalla) :
                new ObjectParameter("IdPantalla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("spTieneProblemasEnPantallaEstePostulate", idpostulantePersonaParameter, idPantallaParameter);
        }
    
        public virtual ObjectResult<sp_vPersona_Familiar_Result> sp_vPersona_Familiar(Nullable<int> idPersonaPostulante)
        {
            var idPersonaPostulanteParameter = idPersonaPostulante.HasValue ?
                new ObjectParameter("IdPersonaPostulante", idPersonaPostulante) :
                new ObjectParameter("IdPersonaPostulante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_vPersona_Familiar_Result>("sp_vPersona_Familiar", idPersonaPostulanteParameter);
        }
    
        public virtual int spDocumentoInscripto(Nullable<bool> esInsert, Nullable<int> idInscripcion, Nullable<int> idTipoDocPresentado, string pathAlmacenamiento)
        {
            var esInsertParameter = esInsert.HasValue ?
                new ObjectParameter("EsInsert", esInsert) :
                new ObjectParameter("EsInsert", typeof(bool));
    
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var idTipoDocPresentadoParameter = idTipoDocPresentado.HasValue ?
                new ObjectParameter("IdTipoDocPresentado", idTipoDocPresentado) :
                new ObjectParameter("IdTipoDocPresentado", typeof(int));
    
            var pathAlmacenamientoParameter = pathAlmacenamiento != null ?
                new ObjectParameter("PathAlmacenamiento", pathAlmacenamiento) :
                new ObjectParameter("PathAlmacenamiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDocumentoInscripto", esInsertParameter, idInscripcionParameter, idTipoDocPresentadoParameter, pathAlmacenamientoParameter);
        }
    
        [DbFunction("SINUEntities", "DocumentosNecesariosDelInscripto")]
        public virtual IQueryable<DocumentosNecesariosDelInscripto_Result1> DocumentosNecesariosDelInscripto(Nullable<int> idInscripcion)
        {
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DocumentosNecesariosDelInscripto_Result1>("[SINUEntities].[DocumentosNecesariosDelInscripto](@IdInscripcion)", idInscripcionParameter);
        }
    
        [DbFunction("SINUEntities", "SecuenciasEtapaEstadosEnOrden")]
        public virtual IQueryable<SecuenciasEtapaEstadosEnOrden_Result> SecuenciasEtapaEstadosEnOrden()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SecuenciasEtapaEstadosEnOrden_Result>("[SINUEntities].[SecuenciasEtapaEstadosEnOrden]()");
        }
    
        public virtual int spExamenParaEsteInscripto(Nullable<int> idInscripcion, Nullable<System.DateTime> fechaRindeExamen, Nullable<int> idEstablecimientoRindeExamen)
        {
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var fechaRindeExamenParameter = fechaRindeExamen.HasValue ?
                new ObjectParameter("FechaRindeExamen", fechaRindeExamen) :
                new ObjectParameter("FechaRindeExamen", typeof(System.DateTime));
    
            var idEstablecimientoRindeExamenParameter = idEstablecimientoRindeExamen.HasValue ?
                new ObjectParameter("IdEstablecimientoRindeExamen", idEstablecimientoRindeExamen) :
                new ObjectParameter("IdEstablecimientoRindeExamen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spExamenParaEsteInscripto", idInscripcionParameter, fechaRindeExamenParameter, idEstablecimientoRindeExamenParameter);
        }
    
        public virtual ObjectResult<spRestriccionesParaEstePostulante_Result> spRestriccionesParaEstePostulante(Nullable<int> idPostulantePersona, Nullable<System.DateTime> fechaNacimiento, Nullable<int> idpreferencia)
        {
            var idPostulantePersonaParameter = idPostulantePersona.HasValue ?
                new ObjectParameter("IdPostulantePersona", idPostulantePersona) :
                new ObjectParameter("IdPostulantePersona", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var idpreferenciaParameter = idpreferencia.HasValue ?
                new ObjectParameter("idpreferencia", idpreferencia) :
                new ObjectParameter("idpreferencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRestriccionesParaEstePostulante_Result>("spRestriccionesParaEstePostulante", idPostulantePersonaParameter, fechaNacimientoParameter, idpreferenciaParameter);
        }
    
        public virtual int sp_DataProblemaEncontradoIUD(Nullable<int> idPostulantePersona, Nullable<int> idDataVerificacion, string comentario, Nullable<int> idDataProblemaEncontrado, Nullable<bool> eliminar)
        {
            var idPostulantePersonaParameter = idPostulantePersona.HasValue ?
                new ObjectParameter("IdPostulantePersona", idPostulantePersona) :
                new ObjectParameter("IdPostulantePersona", typeof(int));
    
            var idDataVerificacionParameter = idDataVerificacion.HasValue ?
                new ObjectParameter("IdDataVerificacion", idDataVerificacion) :
                new ObjectParameter("IdDataVerificacion", typeof(int));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var idDataProblemaEncontradoParameter = idDataProblemaEncontrado.HasValue ?
                new ObjectParameter("IdDataProblemaEncontrado", idDataProblemaEncontrado) :
                new ObjectParameter("IdDataProblemaEncontrado", typeof(int));
    
            var eliminarParameter = eliminar.HasValue ?
                new ObjectParameter("Eliminar", eliminar) :
                new ObjectParameter("Eliminar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DataProblemaEncontradoIUD", idPostulantePersonaParameter, idDataVerificacionParameter, comentarioParameter, idDataProblemaEncontradoParameter, eliminarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Vaciar2(string valoremail, Nullable<int> eliminandotabla)
        {
            var valoremailParameter = valoremail != null ?
                new ObjectParameter("valoremail", valoremail) :
                new ObjectParameter("valoremail", typeof(string));
    
            var eliminandotablaParameter = eliminandotabla.HasValue ?
                new ObjectParameter("eliminandotabla", eliminandotabla) :
                new ObjectParameter("eliminandotabla", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Vaciar2", valoremailParameter, eliminandotablaParameter);
        }
    
        [DbFunction("SINUEntities", "EstablecimientoRindeExamenDeOficina")]
        public virtual IQueryable<EstablecimientoRindeExamenDeOficina_Result> EstablecimientoRindeExamenDeOficina(Nullable<int> idOficinayDelegacion)
        {
            var idOficinayDelegacionParameter = idOficinayDelegacion.HasValue ?
                new ObjectParameter("idOficinayDelegacion", idOficinayDelegacion) :
                new ObjectParameter("idOficinayDelegacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EstablecimientoRindeExamenDeOficina_Result>("[SINUEntities].[EstablecimientoRindeExamenDeOficina](@idOficinayDelegacion)", idOficinayDelegacionParameter);
        }
    
        public virtual int spAspNetUserYPostulanteEliminar(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAspNetUserYPostulanteEliminar", emailParameter);
        }
    
        public virtual ObjectResult<sp_InvestigaDNI_Result> sp_InvestigaDNI(string dNI)
        {
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InvestigaDNI_Result>("sp_InvestigaDNI", dNIParameter);
        }
    
        public virtual ObjectResult<Sp_InvestigarEMAIL_Result> Sp_InvestigarEMAIL(string valoremail)
        {
            var valoremailParameter = valoremail != null ?
                new ObjectParameter("valoremail", valoremail) :
                new ObjectParameter("valoremail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_InvestigarEMAIL_Result>("Sp_InvestigarEMAIL", valoremailParameter);
        }
    
        public virtual int Sp_PostulanteELIMINAR(string valoremail, Nullable<bool> guardarEliminados, string comentario, string emailUsuarioEliminador)
        {
            var valoremailParameter = valoremail != null ?
                new ObjectParameter("valoremail", valoremail) :
                new ObjectParameter("valoremail", typeof(string));
    
            var guardarEliminadosParameter = guardarEliminados.HasValue ?
                new ObjectParameter("GuardarEliminados", guardarEliminados) :
                new ObjectParameter("GuardarEliminados", typeof(bool));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            var emailUsuarioEliminadorParameter = emailUsuarioEliminador != null ?
                new ObjectParameter("EmailUsuarioEliminador", emailUsuarioEliminador) :
                new ObjectParameter("EmailUsuarioEliminador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_PostulanteELIMINAR", valoremailParameter, guardarEliminadosParameter, comentarioParameter, emailUsuarioEliminadorParameter);
        }
    
        public virtual int sp_Totales_1Restriccion(string tipo_Check, string idModalidad, Nullable<int> idConvocatoria)
        {
            var tipo_CheckParameter = tipo_Check != null ?
                new ObjectParameter("Tipo_Check", tipo_Check) :
                new ObjectParameter("Tipo_Check", typeof(string));
    
            var idModalidadParameter = idModalidad != null ?
                new ObjectParameter("IdModalidad", idModalidad) :
                new ObjectParameter("IdModalidad", typeof(string));
    
            var idConvocatoriaParameter = idConvocatoria.HasValue ?
                new ObjectParameter("IdConvocatoria", idConvocatoria) :
                new ObjectParameter("IdConvocatoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Totales_1Restriccion", tipo_CheckParameter, idModalidadParameter, idConvocatoriaParameter);
        }
    
        public virtual ObjectResult<sp_Totales_FullRestricciones_Result> sp_Totales_FullRestricciones(Nullable<int> formato, string idModalidad, Nullable<int> idConvocatoria)
        {
            var formatoParameter = formato.HasValue ?
                new ObjectParameter("formato", formato) :
                new ObjectParameter("formato", typeof(int));
    
            var idModalidadParameter = idModalidad != null ?
                new ObjectParameter("IdModalidad", idModalidad) :
                new ObjectParameter("IdModalidad", typeof(string));
    
            var idConvocatoriaParameter = idConvocatoria.HasValue ?
                new ObjectParameter("IdConvocatoria", idConvocatoria) :
                new ObjectParameter("IdConvocatoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Totales_FullRestricciones_Result>("sp_Totales_FullRestricciones", formatoParameter, idModalidadParameter, idConvocatoriaParameter);
        }
    
        public virtual ObjectResult<sp_Totales_FullRestriccion_Result> sp_Totales_FullRestriccion(string idModalidad, Nullable<int> idConvocatoria)
        {
            var idModalidadParameter = idModalidad != null ?
                new ObjectParameter("IdModalidad", idModalidad) :
                new ObjectParameter("IdModalidad", typeof(string));
    
            var idConvocatoriaParameter = idConvocatoria.HasValue ?
                new ObjectParameter("IdConvocatoria", idConvocatoria) :
                new ObjectParameter("IdConvocatoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Totales_FullRestriccion_Result>("sp_Totales_FullRestriccion", idModalidadParameter, idConvocatoriaParameter);
        }
    
        public virtual int sp_PostulanteCambiarDelegacionYSecuencia(Nullable<int> idInscripcion, Nullable<int> idOficinasYDelegaciones, Nullable<int> idSecuencia, Nullable<bool> anulaFechaEntrevista)
        {
            var idInscripcionParameter = idInscripcion.HasValue ?
                new ObjectParameter("IdInscripcion", idInscripcion) :
                new ObjectParameter("IdInscripcion", typeof(int));
    
            var idOficinasYDelegacionesParameter = idOficinasYDelegaciones.HasValue ?
                new ObjectParameter("IdOficinasYDelegaciones", idOficinasYDelegaciones) :
                new ObjectParameter("IdOficinasYDelegaciones", typeof(int));
    
            var idSecuenciaParameter = idSecuencia.HasValue ?
                new ObjectParameter("IdSecuencia", idSecuencia) :
                new ObjectParameter("IdSecuencia", typeof(int));
    
            var anulaFechaEntrevistaParameter = anulaFechaEntrevista.HasValue ?
                new ObjectParameter("AnulaFechaEntrevista", anulaFechaEntrevista) :
                new ObjectParameter("AnulaFechaEntrevista", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PostulanteCambiarDelegacionYSecuencia", idInscripcionParameter, idOficinasYDelegacionesParameter, idSecuenciaParameter, anulaFechaEntrevistaParameter);
        }
    }
}
