@model SINU.Models.Delegacion_EstablecExamen

@{
    ViewBag.Title = "Asignar Establecimiento a una Oficina/Delegación";
    //Layout = "~/Views/Shared/_MenuPerfilAdmin.cshtml";
    SelectList lst = new SelectList(new SINU.Models.SINUEntities().OficinasYDelegaciones.ToList(), "idOficinasYDelegaciones", "Nombre");
    SelectList lst2 = new SelectList(new SINU.Models.SINUEntities().EstablecimientoRindeExamen.ToList(), "IdEstablecimientoRindeExamen", "Nombre");
}

<h2>Asignar Establecimiento a una Oficina/Delegación</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idOficinasYDelegaciones, "Oficina/Delegación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idOficinasYDelegaciones", lst, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idOficinasYDelegaciones, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdEstablecimientoRindeExamen, "Establecimiento de Examen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEstablecimientoRindeExamen", lst2, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdEstablecimientoRindeExamen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Asignar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>
