@model SINU.Models.DataTableVM
@using SINU.ViewModels;

@{
    ViewBag.Title = "Inscriptos Por Delegación: " + ViewBag.delegacionSeleccionada;
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title2 = "Total de Inscriptos: " + ViewBag.CantReg;
    SelectList Drop = ViewBag.EstadosEtapas;
}


<h2 class="font-weight-bold ">
    @ViewBag.Title
</h2>

<div class="alert alert-dark text-right text-secondary" role="alert" style="background-color: #346691!important; color:white !important ;"> Total de  @ViewBag.Title2</div>

@*<h2 class="font-weight-bold text-warning">
        @ViewBag.Title2
    </h2>*@



<div class="col-md-9 borderdiv1">
    @Html.ActionLink("Atras", "Index", "CallConsulta", new { id = ViewBag.ActivarId }, new { @class = "btn btn-primary w-80  btn-dark" })

    <div class="tab-content TABMovil" id="TabDocumentacion">
            <!--TABLA DE TOTAL DE POSTULANTES A REVISAR-->
            <div id="opcionesExtrasDT1">
                <div class="col-md-4 col-sm-12 mb-2 p-0 text-center pt-1">
                    <div class="col-md-12">
                        <label>Etapa: <b id="ETAPA">----</b></label>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12 mb-2 p-0">
                    <div class="col-md-12">
                        @Html.DropDownList("EstadosEtapasPost", Drop , "Seleccione Etapa/Estado", new { @class = "form-control selectpicker" })
         
                    </div>
                </div>
                <div class="col-md-4 col-sm-12 mb-2 p-0">

                    <div class="col-md-12">
                        <button class="btn btn-dark form-control" onclick="limpiar()">Limpiar filtros</button>
                    </div>
                </div>
            </div>
            <br />
            <table class="table table-filters table-bordered table-light table-hover ajaxTabla" id="PostulanteConsultor" style="width:100%">
                <thead class="thead-dark">
                    <tr>
                        <!--Encabezados generados dinamicamente-->
                    </tr>
                </thead>
                @*<tbody>
                    <tr>
                        <td class="text-center">Ningún dato disponible en esta tabla</td>
                    </tr>
                </tbody>*@
            </table>

    </div>



</div>

@Html.TablaHelper(Model.TablaVista, "dark")




<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->
@section Scripts {
    <script type="text/javascript">

        //datatablesAjax
        tablaDatos = @Html.tablaToJson(Model)

        idInputSearchDelegacion = `searchText${window.location.pathname}-${tablaDatos.TablaVista}`
        $(":input[type='search']").on("keyup", async function () {
            sessionStorage.setItem(idInputSearchDelegacion, $(this).val());
        });
        columns = tablaDatos.Columnas;
        columns.push({ data: "Opciones", searchable: false, orderable: false, title: 'Opciones', className: 'noPrint' });
        filtroInicialDelegacion = tablaDatos.filtrosExtras;
        var input_filter_value;
        var input_filter_timeout = null;
        primerCarga = true;

        titleTable = $(`#dataTable-${tablaDatos.TablaVista}`).prev(':header').html();

        var table = $(`#dataTable-${tablaDatos.TablaVista}`).DataTable({
            "serverSide": true,
            "processing": true,
            searchDelay: 900,
            "ajax": {
                url: "@Url.Action("CustomServerSideSearchActionAsync", "AjaxDataTable")",
                type: "POST",
                //async: false,
                data: function (data) {
                    if (primerCarga) {
                        primerCarga = false;

                        data.search.value = sessionStorage.getItem(idInputSearchDelegacion);

                    };

                    sessionStorage.getItem(idInputSearchDelegacion) == undefined ? sessionStorage.setItem(idInputSearchDelegacion, "") : null;
                    sessionStorage.EtapasPostDelegacion == undefined ? sessionStorage.EtapasPostDelegacion = "" : null;
                    sessionStorage.EstadosPostDelegacion == undefined ? sessionStorage.EstadosPostDelegacion = "" : null;

                    data.filtrosExtras = [
                        {
                            Columna: "Etapa",
                            Valor: sessionStorage.EtapasPostDelegacion
                        },
                        {
                            Columna: "EstadoEtapa",
                            Valor: sessionStorage.EstadosPostDelegacion
                        }];

                    $.each(filtroInicialDelegacion, function (ConsultaPorDelegacion,item) {
                        data.filtrosExtras.push(item);
                    })

                    data.tablaVista = tablaDatos.TablaVista;

                    data.columns.pop()
                },
                dataSrc: function (json) {

                    $.each(json.data, function (ConsultaPorDelegacion, item) {

                        botonDetalle = `<a class='mr-1 btn btn-info fas fa-bars load-submit' href='/Postulante?ID_Postulante=${item.IdPostulantePersona}'  data-toggle='tooltip' data-placement='top' title='Detalles'></a>`;

                        item.Opciones = `<div class="d-flex justify-content-around">${botonDetalle}</div>`
                    });
                    return json.data;
                }
            },

            "deferRender": true,

            dom: '<"container row justify-content-center m-0"<"col-12 mb-2"B><"col-md-6 col-sm-12"l><"col-md-6 col-sm-12"f><"opcionesExtrasDT2 container  row mt-1">>r<"col-sm-12"t><"container row  d-flex"<"col-md-6 col-sm-12"i><"col-md-6 col-sm-12"p>>',

            buttons: [
                 {
                     extend: 'copyHtml5',
                     text: 'Copiar' ,
                     exportOptions: {

                         columns: ':not(.noPrint)'
                     },
                     title: titleTable,

                 },
                 {
                     extend: 'excelHtml5',
                     exportOptions: {
                         columns: ':not(.noPrint)'
                     },
                     title: titleTable,

                 },
                 {
                     extend: 'pdfHtml5',
                     exportOptions: {
                         columns: ':not(.noPrint)'
                     },
                     orientation: 'landscape',
                     title: titleTable,
                     pageSize:'LEGAL'

                 },
                 {
                     extend: 'print',
                     text: 'Imprimir',
                     exportOptions: {

                         columns: ':not(.noPrint)'
                     },
                     title: titleTable,
                 },
                 //{
                 //    extend: 'print',
                 //    text: 'Imprimir Todos',
                 //    exportOptions: {

                 //        columns: ':not(.noPrint)'
                 //    },
                 //    title: titleTable,
                 //    action: newexportaction

                 //}
             ],
            "language":
            {
                "sProcessing": "<span class='fa-stack fa-lg'>\n\<i class='fa fa-spinner fa-spin fa-stack-2x fa-fw'></i>\n\</span>&nbsp;&nbsp;&nbsp;&nbsp;Cargando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "columns": columns,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
            responsive: true,

        }).on('processing.dt', function (e, settings, processing) {
            if (processing) {
                $(".dataTables_wrapper").addClass("disabled");
            } else {
                $(".dataTables_wrapper").removeClass("disabled");
            }

        });

        function limpiar() {
            sessionStorage.EtapasPostDelegacion = "";
            sessionStorage.EstadosPostDelegacion = "";
            $("#EstadosPost").find("optgroup").removeAttr("hidden");
            $("#ETAPA").html("---")
            $("select.selectpicker").val("").selectpicker("refresh");

            table.search("").ajax.reload();
        };

        $("div.dataTables_filter input").unbind();
        $("div.dataTables_filter input").keyup(function (e) {
            input_filter_value = this.value;
            clearTimeout(input_filter_timeout);
            input_filter_timeout = setTimeout(function () {
                table.search(input_filter_value).draw();
            }, table.context[0].searchDelay);

        });


        //establesco parametro de busqueda para al almacenamineto en el lado del cliente'

        //table.on('search.dt', function () {
        //    sessionStorage.setItem(idInputSearch,table.search());
        //});


        $(document).ready(function () {

            $("table thead tr th").last().width(100);

            $("button div div div.filter-option-inner-inner").css("color", "black");

            jQuery("#opcionesExtrasDT1 div.mb-2")
                .detach()
                .appendTo('.opcionesExtrasDT2')

            $("#le-filters_filter label")
                .addClass("float-md-right")
                .children("input")
                .removeClass("form-control-sm").addClass("form-control")
                .css("width", "225px")
                .attr("placeholder", "dni, nombre, apellido, email")

            $("[name='le-filters_length']").css({ "width": "180px", "font-size": "100%" }).removeClass("form-control-sm")

            $("#EstadosEtapasPost").find(`optgroup[label="${sessionStorage.EtapasPostDelegacion}"]`).find(`option[value="${sessionStorage.EstadosPostDelegacion}"]`).attr("selected", true);
            $("#EstadosEtapasPost").selectpicker("refresh");
            $("#ETAPA").html(sessionStorage.EtapasPostDelegacion == undefined || sessionStorage.EtapasPostDelegacion == "" ? "---" : sessionStorage.EtapasPostDelegacion);


            if (sessionStorage.getItem(idInputSearchDelegacion) != undefined) {
                table.search(sessionStorage.getItem(idInputSearchDelegacion)).draw();
                if (sessionStorage.getItem(idInputSearchDelegacion) != "") {
                    $("#dataTable-vExportacionDatosBasicos_filter input").focus()
                }

            };


            //establesco parametro de busqueda para al almacenamineto en el lado del cliente
            table.on('search.dt', function () {
                sessionStorage.SarchTablaDelPostDelegacion = table.search();
            });

            //esatblesco en el input la ultima busqueda realizada
            table.on('draw', function () {

                table.search(sessionStorage.SarchTablaDelPostDelegacion);

            });

            //guarda las seleciones de los combos
            $("#EstadosEtapasPost").on("change", function () {
                if ($(this).val() == null) {
                    alert("null")
                }
                sessionStorage.EtapasPostDelegacion = $(this).find("option:selected").closest("optgroup").prop("label");
                $("#ETAPA").html(sessionStorage.EtapasPostDelegacion == undefined ? "---" : $(this).find("option:selected").closest("optgroup").prop("label"))
                sessionStorage.EstadosPostDelegacion = $(this).val()
                table.search(sessionStorage.getItem(idInputSearchDelegacion)).ajax.reload();

            });


        })

    </script>
}
