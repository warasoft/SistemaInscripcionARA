@model IEnumerable<SINU.Models.OficinasYDelegaciones>
@using SINU.Models
@{

    SINUEntities db = new SINUEntities();
    ViewBag.CantReg = Model.Count();
    ViewBag.Title2 = "Total de Delegaciones: " + ViewBag.CantReg;
    ViewBag.Postulantes = 0;
}

<h2 class="font-weight-bold">
    SELECCIONE UNA DELEGACION
</h2>

 <div class="alert alert-dark text-right text-secondary" role="alert" style="background-color: #346691!important; color:white !important;"> @ViewBag.Title2</div>


<table class="table table-filters table-bordered table-light table-hover" id="le-filters" style="width:100%">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(m => m.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(m => m.Direccion)
            </th>
            <th>
                @*  @Html.DisplayNameFor(m => m.listoficinas[0].Email1)*@
                <label>Email</label>
            </th>
            <th>
                <label>Postulantes</label>
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.IdDelegacionOficinaIngresoInscribio)
                </th>*@
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.ActionLink(item.Nombre, "ConsultaPorDelegacion", new { DelegacionSeleccionada = item.Nombre })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email1)
            </td>
            @*<td>
            @{ViewBag.Postulantes = db.vConsultaInscripciones.Where(d => d.Delegacion == item.Nombre).ToList().Count;}
            @ViewBag.Postulantes
        </td>*@
        <td>
            @Html.DisplayFor(model=>item.Count)
        </td>
            @*<td>
        @Html.DisplayFor(modelItem => item.IdDelegacionOficinaIngresoInscribio)
        </td>*@
            @*<td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>*@
        </tr>
        }
    </tbody>
</table>


<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->
@section Scripts {
    <script type="text/javascript">
        //scrip que permite buscar por cualquier campo en la tabla para su uso requiere que tabla tenga la propiedad id=myTable
        $(document).ready(function () {
            $(".table-filters").DataTable({
                responsive: true,
                "language":
                {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },

                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                },
                {
                    "targets": 'ni-o-ni-bu',
                    "searchable": true,
                    "orderable": false

                }]


            });

        });
    </script>
}


