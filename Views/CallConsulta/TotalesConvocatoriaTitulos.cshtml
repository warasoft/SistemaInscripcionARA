@model IEnumerable<SINU.Models.vInscriptosconTitulosProblemas>

@{

    ViewBag.Title = "Problemas de Titulos";
    List<SINU.Models.vInscriptosConTitulosProblemasCount> X = new List<SINU.Models.vInscriptosConTitulosProblemasCount>();
    if ((ViewBag.vInscriptosConTitulosProblemasCount != null))
    {
        X = (List<SINU.Models.vInscriptosConTitulosProblemasCount>)(ViewBag.vInscriptosConTitulosProblemasCount);

    }

}

@if (ViewBag.ActivarId != null)
{
    <div>

        @*  en esta linea estoy llamando a TotalesConvocatoriaDetalle de ConsultaProgramadas*@

        <span style="float:right">
            @Html.ActionLink("Atras", "TotalesConvocatoriaDetalle", "CallConsulta", new { IdConvocatoria = ViewBag.ActivarId }, new { @class = "btn btn-primary w-80  btn-dark" })
        </span>

    </div>
}

<h2>
    @ViewBag.Title
</h2>

<!--En vez de esto colocamos la grilla con un titulo en el alert y el total de inscriptos con problemas-->
@*<p>
    <div class="alert alert-success text-dark" role="alert">Total De Inscriptos Con Problemas: @ViewBag.CantToPers </div>
</p>*@

<!-- tabla con detalles de problemas sumarizados, tiene los count de cada problema y muetras el detalle de la convocatoria en cuestion-->

@if (ViewBag.vInscriptosConTitulosProblemasCount != null)
{

    <p>
        <div class="alert alert-success text-dark" role="alert" style="background-color: #346691!important; color:white !important;">DETALLES DE LA CONVOCATORIA y CONTEO DE INSCRIPTOS POR PROBLEMAS  <span style="float:right">Cant. Inscriptos Con Problemas: @ViewBag.CantToPers</span></div>
    </p>
    <table class="table table-sm">
        <thead class="thead-dark">
            <!-- fila con detalle de convocatoria si hay problemas en 1 convoc. se repite en todos los registros su descripc. por eso uso posicion 0
                Pero si la variable ActivarId que guarda la convocatoria que esta siendo examinada es null quiere decir que estoy viendo todas las covocatorias y no debo 
                mostrar un titulo en particular de convocatoria-->
            @if (ViewBag.ActivarId != null)
            {
            <tr>
                <!--Para el caso que una convocatoria no tenga problemas de titulos-->
                @if (X.Count > 0)
                {
                    <th>
                        @X[0].IdModalidad 
                    </th>
                   
                    <th>
                        Inicio:@X[0].FechaInicio
                    </th>
                    <th>
                        Final: @X[0].FechaFinal
                    </th>
                    <th>
                        Fin Proceso: @X[0].Fecha_Fin_Proceso
                    </th>
                    }
             </tr>
            }

            <!--fila con titulos de cada columna-->
            <tr>
                <th scope="col"> => </th>
                <th scope="col" class="table-danger">Problema</th>
                <th scope="col" class="table-warning"> <= </th>
                <th scope="col" class="table-success">Cant. Problemas</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in X)
            {
                <tr>
                    @*<th scope="row">-</th>*@
                    <td class="table-warning" colspan="3">@item.Descripcion</td>
                    @*<td class="table-warning">-    <td>*@  
                    <td class="table-danger">@item.CantInscXProblema</td>
                </tr>
            }
        </tbody>
    </table>


}

<!-- GRILLA CON LOS DETALLES DE CADA INSCRIPTO Y SU PROBLEMA
    -->
<table class="table table-filters table-bordered table-light table-hover" style="width:100%" id="Listado">
    <thead class="thead-dark">
        <tr>
            @*<th>
            @Html.DisplayNameFor(model => model.IdPostulantePersona)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Apellido)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nombres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.IdCarreraOficio)
        </th>*@
            @*<th>
            @Html.DisplayNameFor(model => model.IdDelegacionOficinaIngresoInscribio)
        </th>*@
            @*<th>
            @Html.DisplayNameFor(model => model.FechaInscripcion)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Fecha_Inicio_Proceso)
        </th>*@
            @*<th>
            @Html.DisplayNameFor(model => model.Fecha_Fin_Proceso)
        </th>*@
            <th class="noPrint">
                Ver Datos
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            @*<td>
            @Html.DisplayFor(modelItem => item.IdPostulantePersona)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombres)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descripcion)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.IdCarreraOficio)
        </td>*@
            @*<td>
            @Html.DisplayFor(modelItem => item.IdDelegacionOficinaIngresoInscribio)
        </td>*@
            @*<td>
            @Html.DisplayFor(modelItem => item.FechaInscripcion)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td> @Html.ActionLink(" ", "VerPostulanteElegido", new { IdPostulantePersona = item.IdPostulantePersona }, new { @class = "fas fa-bars", @style = "color:#343a40" }) </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.Fecha_Inicio_Proceso)
        </td>*@
            @*<td>
            @Html.DisplayFor(modelItem => item.Fecha_Fin_Proceso)
        </td>*@
            @*<td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>*@
        </tr>
        }
    </tbody>
</table>


<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->
@section Scripts {
    <script type="text/javascript">
        //scrip que permite buscar por cualquier campo en la tabla para su uso requiere que tabla tenga la propiedad id=myTable
        $(document).ready(function () {
            $(".table-filters").DataTable({
                responsive: true,
                "language":
                {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },

                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                },
                {
                    "targets": 'ni-o-ni-bu',
                    "searchable": false,
                    "orderable": false

                }]


            });

        });
    </script>
}