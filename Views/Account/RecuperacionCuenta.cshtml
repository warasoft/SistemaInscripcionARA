@model SINU.Models.RecuperacionCuenta
@using CaptchaMvc.HtmlHelpers
@{
    ViewBag.Title = "RecuperarCuenta";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Recuperar Cuenta</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.HiddenFor(model => model.Code)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmailOriginal, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailOriginal, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.EmailOriginal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordOriginal, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordOriginal, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-password" } })
                @Html.ValidationMessageFor(model => model.PasswordOriginal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @autocomplete = "new-password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div>
                    @Html.MathCaptcha("Refrescar", "Ingrese el resultado aqui", "Este campo es requerido", true)

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Recuperar Cuenta" class="btn btn-success" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#CaptchaInputText").addClass("form-control");
            $("#CaptchaInputText").next("br").remove();
            $("a[href='#CaptchaImage']").show();
        })

    </script>

}
