@model SINU.ViewModels.RestaurarPostulanteVM


<!--Eta vista tiene el fin de Restaurar Postulante - esto es solo cuando un postulante es interrumpido su proceso de inscripcion -->

@*<h2>Desea restaurar al postulante al proceso de Inscripcion</h2>*@
@Html.AntiForgeryToken()

<div class="container">@*  *@
    @*<h4>@Model.IdInscripcion</h4>*@



    @Html.HiddenFor(m => m.vInscripcionDetallesVM[0].IdInscripcion)
    @*@Html.HiddenFor(m => m.IdInscripcion)*@
    <h4 class="font-weight-bold" style="text-align:center">Restaurar Postulante</h4>
    <div class="card" style=" text-align: -webkit-center;">
        <div class="card-header">
            @*<h5 class="font-weight-bold" style="text-align:left">Restaurar al postulante al proceso de inscripcion a continuacion se detallara los datos y los problemas</h5>*@
            <p class="lead">Restaurar al postulante al proceso de inscripcion a continuacion se detallara los datos y los problemas</p>
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.vInscripcionDetallesVM[0].Apellido, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col">
                        @Html.EditorFor(model => model.vInscripcionDetallesVM[0].Apellido, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.vInscripcionDetallesVM[0].Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.vInscripcionDetallesVM[0].Nombres, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col">
                        @Html.EditorFor(model => model.vInscripcionDetallesVM[0].Nombres, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.vInscripcionDetallesVM[0].Nombres, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.vInscripcionDetallesVM[0].DNI, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col">
                        @Html.EditorFor(model => model.vInscripcionDetallesVM[0].DNI, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.vInscripcionDetallesVM[0].DNI, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.vInscripcionDetallesVM[0].IdInscripcion, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col">
                        @Html.EditorFor(model => model.vInscripcionDetallesVM[0].IdInscripcion, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.vInscripcionDetallesVM[0].IdInscripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">
                            Problemas Encontrado
                        </th>
                        <th scope="col">
                            Comentario
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.vDataProblemaEncontradoVM)
                    {
                        <tr>
                            <td scope="row">
                                @Html.DisplayFor(modelitem => item.DataVerificacion)
                            </td>
                            <td scope="row">
                                @Html.DisplayFor(modelitem => item.Comentario)
                            </td>
                        </tr>
                        @*<div class="note small bg-light p-2">
                                <b>* @Html.DisplayFor(modelitem => item.DataVerificacion) :</b> @Html.DisplayFor(modelitem => item.Comentario)
                            </div>*@
                    }
                </tbody>
            </table>

        </div><!--Fin de la class body card-->
        <div class="form-group justify-content-center align-content-center">
            
            @Html.ActionLink("Ver datos del Postulante","Index","Postulante",new { ID_Postulante= Model.vInscripcionDetallesVM[0].IdPersona},new { @class="btn btn-info btn-lg"})
        </div>
        <div class="card-footer">
            <div class="container">
                <div class="col-md-12 clearfix"> </div>

            </div>
            <div data-toggle="modal" data-target="#modal1">
                <button type="button" id="BTValidar" class="btn btn-success btn-lg float-right m-1"> Volver Etapa Anterior</button>
            </div>

            @Html.ActionLink("Cerrar", "Index", new { id="Documentacion"}, new { @class = "btn btn-dark btn-lg float-right m-1" })


        </div>
    </div><!--Fin de la class card-->
</div>
<div class="modal fade" id="modal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">SINU</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Recuerde esta accion le permitira al postulente avanzar de etapa<br />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" data-dismiss="modal">Cerrar</button>
                @*<button type="submit" class="btn btn-success" value="Postular" name="botonPostular">Confirmar</button>*@
                @Html.ActionLink("Volver Etapa Anterior", "RestaurarPostulante", "Delegacion", new { ID_persona = Model.vInscripcionDetallesVM[0].IdPersona }, new { @id = "BTValidar", @class = "btn btn-success" })

            </div>
        </div>
    </div>
</div>



