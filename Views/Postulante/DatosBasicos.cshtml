@model SINU.ViewModels.DatosBasicosVM

<h4>Datos Basicos</h4>
<br />

@using (Ajax.BeginForm("DatosBasicos", "Postulante", null,
    new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "Exito(data,status,xhr)",
        OnFailure = "Falla",
//        LoadingElementId = "ModalEIA",
//        LoadingElementDuration = 3000,
////UpdateTargetId = "resultTarget"
},
    new { id = "BeginFormDatosBasicos" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="form-group row ">

                <div class="col-sm-6">

                    @Html.HiddenFor(model => model.vPersona_DatosBasicosVM.IdPersona)
                    @Html.HiddenFor(model => model.vPersona_DatosBasicosVM.IdPostulante)
                    @Html.HiddenFor(model => model.vPersona_DatosBasicosVM.IdPreferencia)


                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Apellido, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Apellido, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Nombres, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Nombres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.DNI, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.DNI, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.DNI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "reaonly" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.vPersona_DatosBasicosVM.IdSexo, new { @class = "col-md-12 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.vPersona_DatosBasicosVM.IdSexo, new SelectList(Model.SexoVM, "IdSexo", "Descripcion"), "Seleccione una Opcion...", new { @class = "form-control selectpicker" })
                            <div class="h-100"></div>
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.IdSexo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">

                            @Html.TextBoxFor(model => model.vPersona_DatosBasicosVM.FechaNacimiento, "{0:dd/MM/yyyy}", new { @class = "form-control fechacumple datepicker fechacumpleaños ", @readonly = true, @placeholder = " dd/mm/aaaa" })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.FechaNacimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Edad, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Edad, new { htmlAttributes = new { @class = "form-control edad", @readonly = "readonly", @placeholder = "..." } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Edad, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-sm-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Telefono, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Telefono, new { htmlAttributes = new { @class = "form-control", @placeholder = "codigo de area sin 0", @id = "Telefono" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.Celular, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.Celular, new { htmlAttributes = new { @class = "form-control", @placeholder = "codigo de area sin 0 y el numero sin 15", @id = "Celular" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.Celular, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.IdPreferencia, new { @class = "col-md-12 control-label" })
                        <div class="col-md-10">
                            @Html.Hidden("IdPrefe", Model.vPersona_DatosBasicosVM.IdPreferencia)

                            @Html.EditorFor(model => model.Preferenacia, new { htmlAttributes = new { @class = "form-control ", @readonly = "readonly" } })

                            @*@Html.DropDownListFor(model => model.vPersona_DatosBasicosVM.IdPreferencia, new SelectList(Model.vPeriodosInscripsVM, "IdInstitucion", "NombreInst"), "Ingrese Fecha de Nacimiento", htmlAttributes: new { @class = "form-control  selectpicker", @id = "InstitutoPref", @disabled = "disabled" })*@
                            <div class="h-100"></div>
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.IdPreferencia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.IdDelegacionOficinaIngresoInscribio, new { @class = "col-md-12 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.vPersona_DatosBasicosVM.IdDelegacionOficinaIngresoInscribio, new SelectList(Model.OficinasYDelegacionesVM, "IdOficinasYDelegaciones", "Nombre"), "Seleccione una Opcion...", htmlAttributes: new { @class = "form-control selectpicker" })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.IdDelegacionOficinaIngresoInscribio, "", new { @class = "text-danger of" })
                        </div>
                    </div>

                    <div class="form-group  ">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.IdComoSeEntero, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.vPersona_DatosBasicosVM.IdComoSeEntero, new SelectList(Model.ComoSeEnteroVM, "IdComoSeEntero", "Opcion"), "Seleccione una Opcion...", new { @class = "form-control selectpicker", @id = "DROPComoEntero" })
                            <div class="h-100"></div>
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.IdComoSeEntero, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="IdComentario" style="display:none">
                        @Html.LabelFor(model => model.vPersona_DatosBasicosVM.ComoSeEntero, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.vPersona_DatosBasicosVM.ComoSeEntero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vPersona_DatosBasicosVM.ComoSeEntero, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />
            </div>
            <div class="form-group row ml-3 BTAcciones">

                <input type="submit" value="Guadar Datos" class="btn btn-success m-1" id="DatosBasicosBTGuarda" />

                @Ajax.ActionLink("Solicitar Entrevista", "SolicitudEntrevistaAsync", new { ID_persona = Model.vPersona_DatosBasicosVM.IdPersona }, new AjaxOptions
                   {
                       HttpMethod = "POST",
                       OnSuccess = "Exito(data,status,xhr)",
                       OnFailure = "Falla"
                   }, new { @id = "BTentrevista", @class = "load-submit btn btn-danger disabled m-1" })

            </div>
            <div class="form-group BTAcciones">
                <p class="col" style=" color: #0945ff;">
                    *Para solicitar la entrevista debera cargar el formulario y guardarlo.
                </p>
            </div>
        </div>
    </div>

}
