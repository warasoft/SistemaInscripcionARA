@model SINU.ViewModels.SetPasswordVM
<!-- xxxxxxxxxxxx Debo indicar el TITLE de la pantalla y el MENUPERFIL correspondiente en todas las pantallas xxxxxxxxxxxxxx -->
@{
    ViewBag.Title = "Recrear contraseña";
}
@*@section MenuPerfil{

    @Html.Partial("_MenuPerfilAdmin")
}*@
<!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  -->

<h2>@ViewBag.Title.</h2>
<p class="text-info">
    @Html.DisplayNameFor(model => model.Email)@Html.DisplayFor(model => model.Email)
</p>
<p class="text-info">
    La contraseña actual del Usuario indicado será sobre-escrita con la que ingresará en esta pantalla
</p>


@using (Html.BeginForm("SetPassword", "Administrador", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Bajo responsabilidad del ADMINISTRADOR</h4>
    <h4>
        @Html.DisplayNameFor(model => model.Email)@Html.DisplayFor(model => model.Email)
    </h4>
    <hr />

    @Html.ValidationSummary("", new { @class = "text-danger" })
    <!-- escondo con hiddenfor los campos que no voy a cargar pero que hacen a la validacion del modelo
    cuando pregunto ModelState.IsValid en el action del controller EL HIDDEN FOR DEBE IR BAJO EL VALIDATION SUMMARY-->
    @Html.HiddenFor(model => model.Email)
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="RE Establecer contraseña" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
