@model SINU.Models.vUsuariosAdministrativos

<!-- xxxxxxxxxxxx Debo indicar el TITLE de la pantalla y el MENUPERFIL correspondiente en todas las pantallas xxxxxxxxxxxxxx -->
@{
    ViewBag.Title = "Creacion Usuario Administrativo";
    //creando la lista para la vista Create usa combo de las oficinas de ingreso y delegaciones si es DELEGACION
    ViewBag.OficinaYDelegacion = new SelectList(new SINU.Models.SINUEntities().OficinasYDelegaciones.ToList(), "IdOficinasYDelegaciones", "Nombre");
    // ViewBag.CodGrupo = new SelectList(new SINU.Models.SINUEntities().vSeguridad_Grupos.ToList(), "codGrupo", "codGrupo");
    ViewBag.CodGrupo =  new SINU.Models.SINUEntities().vSeguridad_Grupos.Where(x => x.codGrupo != "Postulante").Select(x=> new SelectListItem
    {
        Value = x.codGrupo,
        Text= x.codGrupo}).ToList();
    ViewBag.Grado = new SelectList(new SINU.Models.SINUEntities().vParam_Grados.ToList(), "GRADO", "DESCRIPCION");
    ;}
@*@section MenuPerfil{

    @Html.Partial("_MenuPerfilAdmin")
}*@
<!-- xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  -->

<h2>CREAR Usuario Administrativo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Usuario Administrativo nuevo</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.mr, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.mr, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.mr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Grado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Grado, (SelectList)ViewBag.Grado, "---Seleccione Grado ---", htmlAttributes: new { @class = "form-control" })

            @*@Html.EditorFor(model => model.Grado, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Grado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Destino, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Destino, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Destino, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.codGrupo, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.codGrupo, new SelectList (ViewBag.CodGrupo,"Text","Text","Seleccione"), htmlAttributes: new { @class = "form-control selectpicker", @id = "inaoact" })
        </div>
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.Delegacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delegacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delegacion, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="SI">
        <div class="form-group">
            @Html.LabelFor(m => m.IdOficinasYDelegaciones, new { @class = "col-md-2 control-label" })
            <div class="col-md-12">
                @Html.DropDownListFor(m => m.IdOficinasYDelegaciones, (SelectList)ViewBag.OficinaYDelegacion, "---Seleccione la corresp ---", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
    </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        <p>
            @Html.ActionLink("Volver a la lista", "Index")
        </p>
    </div>
    }

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">


            PerfilUsu();

            function PerfilUsu() {
                var text = $("#inaoact").val().trim(' ');
                if (text == "Delegacion") {
                    $("#SI").show();
                } else {
                    $("#SI").hide();
                }
            };

            $("#inaoact").on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
                PerfilUsu();
            });
        </script>
    }
